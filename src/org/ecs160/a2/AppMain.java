package org.ecs160.a2;


import com.codename1.io.Log;
import com.codename1.ui.Dialog;
import com.codename1.ui.Form;
import com.codename1.ui.Toolbar;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import org.ecs160.a2.items.gates.*;

import static com.codename1.ui.CN.*;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class AppMain {

    private Form current;
    private Resources theme;

    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);

        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if(err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });        
    }

    public void test() {
        ANDgate test0 = new ANDgate(0, 0);
        test0.test();
        NANDgate test1 = new NANDgate(0, 0);
        test1.test();
        NORgate test2 = new NORgate(0,0);
        test2.test();
        NOTgate test3 = new NOTgate(0,0);
        test3.test();
        ORgate test4 = new ORgate(0,0);
        test4.test();
        XNORgate test5 = new XNORgate(0,0);
        test5.test();
        XORgate test6 = new XORgate(0,0);
        test6.test();
    }

    public void start() {
        if(current != null){
            current.show();
            return;
        }
//        test();
        new Canvas();
    }

    public void stop() {
        current = getCurrentForm();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = getCurrentForm();
        }
    }
    
    public void destroy() {
    }

}
